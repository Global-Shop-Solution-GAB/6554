Program.Sub.ScreenSU.Start
Gui.Form..Create(BaseForm)
Gui.Form..Caption("Form")
Gui.Form..Size(739,478)
Gui.Form..MinX(0)
Gui.Form..MinY(0)
Gui.Form..Position(0,0)
Gui.Form..AlwaysOnTop(False)
Gui.Form..FontName("Tahoma")
Gui.Form..FontSize(8.25)
Gui.Form..ControlBox(True)
Gui.Form..MaxButton(True)
Gui.Form..MinButton(True)
Gui.Form..MousePointer(0)
Gui.Form..Moveable(True)
Gui.Form..Sizeable(True)
Gui.Form..ShowInTaskBar(True)
Gui.Form..TitleBar(True)
Gui.Form..Event(UnLoad,Form_UnLoad)
Gui.Form.cmdSave.Create(Button)
Gui.Form.cmdSave.Enabled(True)
Gui.Form.cmdSave.Visible(True)
Gui.Form.cmdSave.Zorder(0)
Gui.Form.cmdSave.Size(75,23)
Gui.Form.cmdSave.Position(660,4)
Gui.Form.cmdSave.Caption("Save")
Gui.Form.cmdSave.FontName("Tahoma")
Gui.Form.cmdSave.FontSize(8.25)
Gui.Form.cmdSave.Event(Click,cmdSave_Click)
Gui.Form.cmdSave.Anchor(9)
Gui.Form.GsGcDisplay.Create(GsGridControl)
Gui.Form.GsGcDisplay.Enabled(True)
Gui.Form.GsGcDisplay.Visible(True)
Gui.Form.GsGcDisplay.Zorder(0)
Gui.Form.GsGcDisplay.Size(727,410)
Gui.Form.GsGcDisplay.Position(5,31)
Gui.Form.GsGcDisplay.Anchor(15)
Gui.Form.cmdPriceSchd.Create(Button)
Gui.Form.cmdPriceSchd.Enabled(True)
Gui.Form.cmdPriceSchd.Visible(True)
Gui.Form.cmdPriceSchd.Zorder(0)
Gui.Form.cmdPriceSchd.Size(75,23)
Gui.Form.cmdPriceSchd.Position(5,3)
Gui.Form.cmdPriceSchd.Caption("Price Sched")
Gui.Form.cmdPriceSchd.FontName("Tahoma")
Gui.Form.cmdPriceSchd.FontSize(8.25)
Gui.Form.cmdPriceSchd.Event(Click,cmdPriceSchd_Click)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
v.Global.sOrderNo.Declare
Program.Sub.Preflight.End

Program.Sub.Main.Start
Function.Intrinsic.UI.UsePixels ' Allows you to use Pixels instead of Twips throughout
'Populate Hook
f.Intrinsic.Control.If(v.Caller.Hook, =, 11560)
	'Set Script Label
	Variable.Passed.000202.Set("Time Round")
f.Intrinsic.Control.EndIf

f.Intrinsic.Control.If(v.Caller.Hook, =, 11920)
	f.Intrinsic.Control.CallSub(createDisplayDT)
	f.Intrinsic.Control.CallSub(loadGridProperties)
	f.Intrinsic.Control.CallSub(loadSO)
	gui.Form..Show
f.Intrinsic.Control.EndIf

Program.Sub.Main.End

Program.Sub.createDisplayDT.Start
f.Intrinsic.Control.Try
	f.Data.DataTable.Create("displayDT", true)
	f.Data.DataTable.AddColumn("displayDT", "Order_no", "String")
	f.Data.DataTable.AddColumn("displayDT", "Record_no", "String")
	f.Data.DataTable.AddColumn("displayDT", "Part", "String")	
	f.Data.DataTable.AddColumn("displayDT", "Description", "String")
	f.Data.DataTable.AddColumn("displayDT", "Time_Type", "String")
	f.Data.DataTable.AddColumn("displayDT", "O_Hours", "Float", 0)
	f.Data.DataTable.AddColumn("displayDT", "R_Hours", "Float", 0)
	f.Data.DataTable.AddColumn("displayDT", "O_Rate", "Float", 0)
	f.Data.DataTable.AddColumn("displayDT", "R_Rate", "Float", 0)
	'f.Data.DataTable.AddColumn("displayDT", "Total", "Float", 0)
	f.Data.DataTable.AddExpressionColumn("displayDT", "Total", "Float", "R_Hours * R_Rate")
	
	f.Data.DataView.Create("displayDT", "displayDV", 22)
	gui.Form.GsGcDisplay.AddGridviewFromDataview("displayGV", "displayDT", "displayDV")
	gui.Form.GsGcDisplay.MainView("displayGV")
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.createDisplayDT.End

Program.Sub.loadGridProperties.Start
v.Local.iCnt.Declare
v.Local.sFields.Declare
v.Local.iVisibleIndex.Declare

f.Intrinsic.Control.Try
	f.Intrinsic.String.Split(v.DataTable.displayDT.FieldNames, "*!*", v.Local.sFields)
	f.Intrinsic.Control.For(v.Local.iCnt, 0, v.Local.sFields.UBound, 1)
		gui.Form.GsGcDisplay.SetColumnProperty("displayGV", v.Local.sFields(v.Local.iCnt), "HeaderFontBold", True)
		gui.Form.GsGcDisplay.SetColumnProperty("displayGV", v.Local.sFields(v.Local.iCnt), "Visible", True)
		gui.Form.GsGcDisplay.SetColumnProperty("displayGV", v.Local.sFields(v.Local.iCnt), "ReadOnly", True)
		gui.Form.GsGcDisplay.SetColumnProperty("displayGV", v.Local.sFields(v.Local.iCnt), "AllowEdit", False)
		gui.Form.GsGcDisplay.SetColumnProperty("displayGV", v.Local.sFields(v.Local.iCnt), "HeaderHAlignment", "Near")
		gui.Form.GsGcDisplay.SetColumnProperty("displayGV", v.Local.sFields(v.Local.iCnt), "CellHAlignment", "Near")
		gui.Form.GsGcDisplay.SetColumnProperty("displayGV", v.Local.sFields(v.Local.iCnt), "HeaderBackColor", v.Color.GSS)
		gui.Form.GsGcDisplay.SetColumnProperty("displayGV", v.Local.sFields(v.Local.iCnt), "HeaderForeColor", v.Color.White)
	f.Intrinsic.Control.Next(v.Local.iCnt)
	
	'GridView Properties
	gui.Form.GsGcDisplay.BestFitColumns("displayGV")
	gui.Form.GsGcDisplay.SetGridviewProperty("displayGV", "OptionsViewColumnAutoWidth", False)
	'gui.Form.GsGcDisplay.SetGridviewProperty("displayGV", "OptionsViewShowAutoFilterRow", True)
	'gui.Form.GsGcDisplay.SetGridviewProperty("displayGV", "OptionsFindAlwaysVisible", True)
	'gui.Form.GsGcDisplay.SetGridviewProperty("displayGV", "Showgrouppanel", True)
	
	'Possible Column Properties 
	gui.Form.GsGcDisplay.SetColumnProperty("displayGV", "R_Hours", "ReadOnly", False)
	gui.Form.GsGcDisplay.SetColumnProperty("displayGV", "R_Hours", "AllowEdit", True)
	gui.Form.GsGcDisplay.SetColumnProperty("displayGV", "R_Rate", "ReadOnly", False)
	gui.Form.GsGcDisplay.SetColumnProperty("displayGV", "R_Rate", "AllowEdit", True)
	'gui.Form.GsGcDisplay.SetColumnProperty("displayGV", "Default", "HeaderHAlignment", "Center")
	'gui.Form.GsGcDisplay.SetColumnProperty("displayGV", "Default", "CellHAlignment", "Center")
	gui.Form.GsGcDisplay.SetColumnProperty("displayGV", "Order_no", "Caption", "Order No")
	gui.Form.GsGcDisplay.SetColumnProperty("displayGV", "Record_No", "Caption", "Line")
	gui.Form.GsGcDisplay.SetColumnProperty("displayGV", "Part", "Caption", "Part/WC")
	gui.Form.GsGcDisplay.SetColumnProperty("displayGV", "Time_Type", "Caption", "Time Type")
	gui.Form.GsGcDisplay.SetColumnProperty("displayGV", "O_hours", "Caption", "Org Hours")
	gui.Form.GsGcDisplay.SetColumnProperty("displayGV", "R_hours", "Caption", "Rnd Hours")
	gui.Form.GsGcDisplay.SetColumnProperty("displayGV", "O_rate", "Caption", "Org Rate")
	gui.Form.GsGcDisplay.SetColumnProperty("displayGV", "O_rate", "Visible", False)
	gui.Form.GsGcDisplay.SetColumnProperty("displayGV", "R_rate", "Caption", "PS Rate")
	'gui.Form.GsGcDisplay.SetColumnProperty("displayGV", "Default", "Visible", False)
	'gui.Form.GsGcDisplay.SetColumnProperty("displayGV", "Default", "DisplayCustomDatetime", "d")
	
	'VisibleIndex
	'gui.Form.GsGcDisplay.SetColumnProperty("displayGV", "Default", "VisibleIndex", v.Local.iVisibleIndex)
	'gui.Form.GsGcDisplay.SetColumnProperty("displayGV", "Default", "VisibleIndex", v.Local.iVisibleIndex.++)
	
	'Conditional Formatting
'	gui.Form.GsGcDisplay.AddStyleFormatCondition("displayGV", "columnName", "TagName", "EQUAL", 1)
'	gui.Form.GsGcDisplay.SetStyleFormatConditionProperty("displayGV", "columnName", "TagName", "ApplyToRow", True) 
'	gui.Form.GsGcDisplay.SetStyleFormatConditionProperty("displayGV", "columnName", "TagName", "BackColor", "Color") 
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.loadGridProperties.End

Program.Sub.cmdSave_Click.Start
v.Local.sSQL.Declare
v.Local.sFilter.Declare
v.Local.iCnt.Declare
v.Local.fRet.Declare
v.Local.sClmn.Declare
v.Local.sData.Declare
V.Local.sReturnCode.Declare
v.Local.fPer.Declare
v.Local.fTmp.Declare
v.Local.iCnt2.Declare
v.Local.fRate.Declare
V.Local.sFiledir.Declare
v.Local.sTotal.Declare
f.Intrinsic.Control.Try
'Try something
	f.ODBC.Connection!con.OpenCompanyConnection
		f.Intrinsic.String.Build("Delete From GCG_6554_SO_TIME Where Order_no = '{0}'", v.Global.sOrderNo, v.Local.sSQL)
		f.ODBC.Connection!con.Execute(v.Local.sSQL)
		f.Data.Datatable.AcceptChanges("displayDT")
		f.Data.Datatable.SaveToDB("displayDT", "con", "GCG_6554_SO_TIME", "Order_NO*!*Record_No*!*Time_Type", 128)
	f.ODBC.Connection!con.Close
	
	'Save Price Back
	f.Data.DataView.ToDataTableDistinct("displayDT", "displayDV", "linesDT", "ORDER_NO*!*Record_No")
	f.Data.Datatable.AddColumn("linesDT", "Record_Type", "String", "L")
	f.Data.Datatable.AddColumn("linesDT", "dmyclmn", "String")
	f.Data.Datatable.AddColumn("linesDT", "R_Hours", "Float", 1)
	f.Data.Datatable.AddColumn("linesDT", "R_Rate", "Float", 0)
	f.Data.Datatable.AddExpressionColumn("linesDT", "R_Total_EC", "Float", "R_Hours * R_Rate")
	f.Data.Datatable.AddColumn("linesDT", "R_Total", "String")
	'Loop Through Lines.
	f.Intrinsic.Control.For(v.Local.iCnt, 0, v.DataTable.linesDT.RowCount--, 1)
		F.Intrinsic.String.Build("Record_No = '{0}'", v.DataTable.linesDT(v.Local.iCnt).Record_No!FieldValtrim, v.Local.sFilter)
		v.Local.fRate.Set(0)
		'Compute Total Hours.
		f.Data.Datatable.Compute("displayDT", "Sum(Total)", v.Local.sFilter, v.Local.fRet)
		f.Data.Datatable.SetValue("linesDT", v.Local.iCnt, "R_Rate", v.Local.fRet)
		'Get Weighted Average
'		f.Data.DataView.Create("displayDT", "avgDV", 22, v.Local.sFilter, "")

''		'check if 0
''		f.Intrinsic.Control.If(v.Local.fRet, =, 0)
''			f.Data.Datatable.SetValue("linesDT", v.Local.iCnt, "R_Rate", v.Local.fRet)
''		f.Intrinsic.Control.Else
''			f.Intrinsic.Control.For(v.Local.iCnt2, 0, v.DataView.displayDT!avgDV.RowCount--, 1)
'''				'Get weigth on the line
'''				v.Local.fTmp.Set(v.DataView.displayDT!avgDV(v.Local.iCnt2).R_Hours!FieldVal)
'''				f.Intrinsic.Math.Div(v.Local.fTmp, v.Local.fRet, v.Local.fPer)
'''				'Multiple Weitgh to Rate 
'''				f.Intrinsic.Math.Mult(v.Local.fPer,v.DataView.displayDT!avgDV(v.Local.iCnt2).R_Rate!FieldVal, v.Local.fTmp)
''				f.Intrinsic.Math.Mult(v.DataView.displayDT!avgDV(v.Local.iCnt2).R_Hours!FieldVal, v.DataView.displayDT!avgDV(v.Local.iCnt2).R_Rate!FieldVal, v.Local.fTmp)
''				'Add to running Rate
''				f.Intrinsic.Math.Add(v.Local.fTmp, v.Local.fRate, v.Local.fRate)
''			f.Intrinsic.Control.Next(v.Local.iCnt2)
''			'Set Weighted Rate
''			f.Intrinsic.Math.Round(v.Local.fRate, 2, v.Local.fRate)
''			f.Data.Datatable.SetValue("linesDT", v.Local.iCnt, "R_Rate", v.Local.fRate)
''		f.Intrinsic.Control.EndIf
'		'Close View
'		f.Data.DataView.Close("displayDT", "avgDV")
		
		F.Intrinsic.String.Format(V.DataTable.linesDT(V.Local.iCnt).R_Total_EC!FieldVal,"####0.000000",V.Local.sTotal)
		F.Data.DataTable.SetValue("linesDT",V.Local.iCnt,"R_Total",V.Local.sTotal)
		
	f.Intrinsic.Control.Next(v.Local.iCnt)
	'Create Display with Avrg Lines
	'v.Local.sClmn.Set("Record_Type*!*ORDER_NO*!*Record_No*!*dmyclmn*!*dmyclmn*!*dmyclmn*!*Price*!*Cost*!*DESCRIPTION*!*dmyclmn*!*dmyclmn*!*dmyclmn*!*dmyclmn*!*dmyclmn*!*discount*!*dmyclmn*!*dmyclmn*!*dmyclmn*!*dmyclmn*!*dmyclmn*!*dmyclmn*!*dmyclmn")
	v.Local.sClmn.Set("Record_Type*!*ORDER_NO*!*Record_No*!*dmyclmn*!*dmyclmn*!*dmyclmn*!*R_Total*!*dmyclmn*!*dmyclmn*!*dmyclmn*!*dmyclmn*!*dmyclmn*!*dmyclmn*!*dmyclmn*!*R_Total*!*dmyclmn*!*dmyclmn*!*dmyclmn*!*dmyclmn*!*dmyclmn*!*dmyclmn*!*dmyclmn")
	'To string
	f.Data.DataView.Create("linesDT", "linesDV", 22)
	f.Data.DataView.ToString("linesDT", "linesDV", v.Local.sClmn, ",", v.Ambient.NewLine, v.Local.sData)
	f.Data.DataView.Close("linesDT", "linesDV")
	f.Data.Datatable.Close("linesDT")
	
	'remove decimals
	f.Intrinsic.String.Replace(v.Local.sData,".","",v.Local.sData)
	
	F.Intrinsic.String.Concat(V.Caller.FilesDir,"\","SOUPDLINES.TXT",V.Local.sFiledir)
	F.Intrinsic.File.String2File(V.Local.sFiledir,V.Local.sData)
	
	F.Global.Callwrapper.New("Test","Sales.UpdateOrderHeaderAndLinesByFile")
	F.Global.Callwrapper.SetProperty("Test","Screenless",1)
	F.Global.Callwrapper.SetProperty("Test","InputFileName","SOUPDLINES.TXT")
	F.Global.CallWrapper.Run("Test")
	
	F.Global.CallWrapper.GetProperty("Test","Status",V.Local.sReturnCode)
	f.Intrinsic.Control.If(V.Local.sReturnCode,<>,"Success")
		F.Intrinsic.UI.Msgbox("Line update Callwrapper failed")
	F.Intrinsic.Control.Else
		f.ODBC.Connection!con.OpenCompanyConnection
			f.Data.Datatable.Compute("displayDT", "Sum(R_Hours)", "", v.Local.fRet)
			f.Intrinsic.String.Build("Update ORDER_REPAIR Set amt_labor = '{0}' Where order_no = '{1}' and Record_No = '  D'", v.Local.fRate, v.Global.sOrderNo, v.Local.sSQL)
			f.ODBC.Connection!con.Execute(v.Local.sSQL)
		f.ODBC.Connection!con.Close
		f.Intrinsic.Control.End
	f.Intrinsic.Control.EndIf 

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.cmdSave_Click.End

Program.Sub.Form_UnLoad.Start
f.Intrinsic.Control.Try
	'End Program.
	f.Intrinsic.Control.End
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.Form_UnLoad.End

Program.Sub.ErrorMsg.Start
v.Local.sError.Declare

'Generic Error message.
f.Intrinsic.String.Build("Project ProjectName.g2u {0}{0}Subroutine: {1}{0}Error: {2} with Description: {3}", v.Ambient.NewLine, v.Args.CurrentSub, v.Ambient.ErrorNumber, v.Ambient.ErrorDescription, v.Local.sError)
f.Intrinsic.UI.Msgbox(v.Local.sError)
Program.Sub.ErrorMsg.End

Program.Sub.loadSO.Start
v.Local.sSO.Declare
v.Local.sRNo.Declare
v.Local.sPart.Declare
v.Local.sDesc.Declare
v.Local.sJob.Declare
v.Local.sSuffix.Declare

v.Local.sSQL.Declare
v.Local.iCnt.Declare

v.Local.fO_Hours.Declare
v.Local.fO_Rate.Declare

v.Local.fR_Hours.Declare
v.Local.fR_Rate.Declare

v.Local.fDec.Declare
v.Local.fWhole.Declare

v.Local.sRet.Declare
v.Local.sFilter.Declare
v.Local.sPriceSched.Declare

v.Local.fRate.Declare
v.Local.sWC.Declare
v.Local.sType.Declare
f.Intrinsic.Control.Try
'Try something
	'Get SO
	f.Intrinsic.String.LPad(Variable.Passed.000003, "0", 7, v.Local.sSO)
	v.Global.sOrderNo.Set(v.Local.sSO)
	'Load Order Lines and Custom Tables.
	f.ODBC.Connection!con.OpenCompanyConnection
		f.Intrinsic.String.Build("Select date_order from ORDER_HEADER where order_No = '{0}' and record_no = '  D'", v.Local.sSO, v.Local.sSQL)
		f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL, v.Local.sJob)
		
		f.Intrinsic.Control.If(v.Local.sJob.Trim, =, "")
			f.Intrinsic.UI.Msgbox("This is not an aplicable order. Please transform to a Time and Material Order")
			f.ODBC.Connection!con.Close
			f.Intrinsic.Control.ExitSub
		f.Intrinsic.Control.EndIf
		
		f.Intrinsic.String.Build("Select price_sched_id from ORDER_HEADER where order_No = '{0}' and record_no = '  D'", v.Local.sSO, v.Local.sSQL)
		f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL, v.Local.sPriceSched)
		
		f.Intrinsic.String.Build("Select  seq, rate_type as Time_Type, sum(hours_worked) as O_Hours, avg(rate_workcenter) as O_Rate from job_detail where job = '{0}' and LMO = 'L' group by Seq, Rate_type", v.Local.sJob, v.Local.sSQL)
		'f.Intrinsic.String.Build("Select Distinct Jon, Seq from job_detail where job = '{0}' and LMO = 'L'", v.Local.sJob, v.Local.sSQL)
		f.Data.Datatable.CreateFromSQL("jobDetailsDT", "con", v.Local.sSQL)
		f.Data.Datatable.AddColumn("jobDetailsDT", "Part", "String")
		f.Data.DataTable.AddColumn("jobDetailsDT", "Order_no", "String", v.Local.sSO)
		f.Data.DataTable.AddColumn("jobDetailsDT", "Record_no", "String")
		f.Data.DataTable.AddColumn("jobDetailsDT", "Record_Type", "String", "L")
		f.Data.DataTable.AddColumn("jobDetailsDT", "Description", "String")
		f.Data.DataTable.AddColumn("jobDetailsDT", "R_Hours", "Float")
		f.Data.DataTable.AddColumn("jobDetailsDT", "R_Rate", "String")
		f.Data.Datatable.AddColumn("jobDetailsDT", "dmyclmn", "String")
		'Dictionary
		f.Intrinsic.String.Build("Select Seq, Part from Job_Operations where Job = '{0}' and LMO = 'L' and Part <> ''", v.Local.sJob, v.Local.sSQL)
		f.Data.Dictionary.CreateFromSQL("wcDict", "con", v.Local.sSQL)
		f.Data.Dictionary.SetDefaultReturn("wcDict", " ")
		f.Data.Datatable.FillFromDictionary("jobDetailsDT", "wcDict", "seq", "Part")
		f.Data.Dictionary.Close("wcDict")
		'SO Dict
		f.Intrinsic.String.Build("Select Part, record_no from V_Order_Lines where Order_No = '{0}'", v.Local.sSO, v.Local.sSQL)
		f.Data.Dictionary.CreateFromSQL("rcDict", "con", v.Local.sSQL)
		f.Data.Dictionary.SetDefaultReturn("rcDict", " ")
		f.Data.Datatable.FillFromDictionary("jobDetailsDT", "rcDict", "Part", "Record_no")
		f.Data.Dictionary.Close("rcDict")
		
		f.Intrinsic.String.Build("Select Part, Description from V_Order_Lines where Order_No = '{0}'", v.Local.sSO, v.Local.sSQL)
		f.Data.Dictionary.CreateFromSQL("rcDict", "con", v.Local.sSQL)
		f.Data.Dictionary.SetDefaultReturn("rcDict", " ")
		f.Data.Datatable.FillFromDictionary("jobDetailsDT", "rcDict", "Part", "Description")
		f.Data.Dictionary.Close("rcDict")
		'Check if it is the first time
		f.Intrinsic.String.Build("Select * from GCG_6554_SO_TIME where Order_no = '{0}'", v.Local.sSO, v.Local.sSQL)
		f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL, v.Local.sRet)
		f.Intrinsic.Control.If(v.Local.sRet.Trim, <>, "")
			f.Data.Datatable.CreateFromSQL("tmpDT", "con", v.Local.sSQL)
			f.Data.Datatable.DeleteRow("displayDT")
			f.Data.Datatable.AcceptChanges("displayDT")
			f.Data.Datatable.Merge("tmpDT", "displayDT", false, 2)
			f.Data.Datatable.Close("tmpDT")		
		f.Intrinsic.Control.Else
		
			'Loop Through Each Line, Check if it has a Job and get Times
			f.Intrinsic.Control.For(v.Local.iCnt, 0, v.DataTable.jobDetailsDT.RowCount--, 1)
	'			v.Local.sSO.Set(v.DataTable.jobDetailsDT(v.Local.iCnt).Order_no!FieldValTrim)
	'			v.Local.sRNo.Set(v.DataTable.jobDetailsDT(v.Local.iCnt).Job!FieldValTrim)
	'			v.Local.sPart.Set(v.DataTable.jobDetailsDT(v.Local.iCnt).Job!FieldValTrim)
	'			v.Local.sDesc.Set(v.DataTable.jobDetailsDT(v.Local.iCnt).Job!FieldValTrim)
	'			v.Local.sJob.Set(v.DataTable.jobDetailsDT(v.Local.iCnt).Job!FieldValTrim)
	'			v.Local.sSuffix.Set(v.DataTable.jobDetailsDT(v.Local.iCnt).Job!FieldValTrim)
				
				v.Local.fO_Hours.Set(v.DataTable.jobDetailsDT(v.Local.iCnt).O_Hours!FieldValTrim)
				v.Local.fO_Rate.Set(v.DataTable.jobDetailsDT(v.Local.iCnt).O_Rate!FieldValTrim)			
				v.Local.fR_Hours.Set(v.DataTable.jobDetailsDT(v.Local.iCnt).O_Hours!FieldValTrim)
				v.Local.fR_Rate.Set(v.DataTable.jobDetailsDT(v.Local.iCnt).O_Rate!FieldValTrim)
	
	'			f.Intrinsic.Control.If(v.Local.sJob.Trim, <>, "")
	'				'Get Type for RT
	'				f.Intrinsic.String.Build("Select Sum(Hours_Worked) from Table where Job = '{0}' and Type = 'RT'", v.Local.sJob, v.Local.sSQL)
	'				f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL, v.Local.fO_Hours)
	'				'Get RT Rate.
	'				f.Intrinsic.String.Build("Select Sum(Actuals) from Table where Job = '{0}' and Type = 'RT'", v.Local.sJob, v.Local.sSQL)
	'				f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL, v.Local.fO_Rate)
					'Get Rounded Housrs if available
					'f.Intrinsic.String.Build("Select R_Hours from GCG_6554_SO_TIME where Order_no = '{0}' and Record_no = '{1}' and Time_Type = 'RT'", v.Local.sSO, v.Local.sRNo, v.Local.sSQL)
					'f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL, v.Local.fR_Hours)
					'f.Intrinsic.Control.If(v.Local.fR_Hours, =, 0)
						'Get Whole Number
						f.Intrinsic.Math.Floor(v.Local.fR_Hours, v.Local.fWhole)
						'Get Decimal part of the number.
						f.Intrinsic.Math.Sub(v.Local.fR_Hours, v.Local.fWhole, v.Local.fDec)
						'Transform decimal into whole
						f.Intrinsic.Math.Mult(v.Local.fDec, 100, v.Local.fDec)
						f.Intrinsic.Math.Ceiling(v.Local.fDec, v.Local.fDec)
						'Divide by 25 to get quaters.
						f.Intrinsic.Math.Div(v.Local.fDec, 25, v.Local.fDec)
						'Round Up to the next Quarter
						f.Intrinsic.Math.Ceiling(v.Local.fDec, v.Local.fDec)
						'Reverse the quarter
						f.Intrinsic.Math.Mult(v.Local.fDec, 25, v.Local.fDec)
						'Reverse back to decimal
						f.Intrinsic.Math.Div(v.Local.fDec, 100, v.Local.fDec)
						'Get Rounded hours
						f.Intrinsic.Math.Add(v.Local.fWhole, v.Local.fDec, v.Local.fR_Hours)
					'f.Intrinsic.Control.EndIf
					'Get Rounded Rate if available
					'f.Intrinsic.String.Build("Select R_Rate from GCG_6554_SO_TIME where Order_no = '{0}' and Record_no = '{1}' and Time_Type = 'RT'", v.Local.sSO, v.Local.sRNo, v.Local.sSQL)
					'f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL, v.Local.fR_Rate)
					'Add to Display
					'f.Data.Datatable.AddRow("displayDT", "Order_no", v.Local.sSO, "Record_no", v.Local.sRNo, "Part", v.Local.sPart, "Description", v.Local.sDesc, "Time_Type", "RT", "O_Hours", v.Local.fO_Hours, "O_Rate", v.Local.fO_Rate, "R_Hours", v.Local.fR_Hours, "R_Rate", v.Local.fR_Rate)
				'f.Intrinsic.Control.EndIf
				
				f.Data.Datatable.SetValue("jobDetailsDT", v.Local.iCnt, "R_Hours", v.Local.fR_Hours, "R_Rate", v.Local.fR_Rate)
			f.Intrinsic.Control.Next(v.Local.iCnt)
			
			f.Data.Datatable.DeleteRow("displayDT")
			f.Data.Datatable.AcceptChanges("displayDT")
			f.Data.Datatable.Merge("jobDetailsDT", "displayDT", false, 2)

		f.Intrinsic.Control.EndIf	
		f.Data.Datatable.Close("jobDetailsDT")
		f.Data.Datatable.AcceptChanges("displayDT")
	
		'Load Price Sched
		f.Intrinsic.Control.For(v.Local.iCnt, 0, v.DataTable.displayDT.RowCount--, 1)
			v.Local.sWC.Set(v.DataTable.displayDT(v.Local.iCnt).Part!FieldValTrim)
			v.Local.sType.Set(v.DataTable.displayDT(v.Local.iCnt).Time_Type!FieldValTrim)
			f.Intrinsic.Control.If(v.Local.sType.Trim, =, "R")
				f.Intrinsic.String.Build("Select top 1 HR_DIRECT from PRICE_SCHED_PRC where PS_PRICE_SCHED = '{0}' and PS_WORK_CENTER = '{1}'", v.Local.sPriceSched, v.Local.sWC, v.Local.sSQL)
				f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL, v.Local.fRate)
			f.Intrinsic.Control.Else
				f.Intrinsic.String.Build("Select top 1 HR_OVERTIME from PRICE_SCHED_PRC where PS_PRICE_SCHED = '{0}' and PS_WORK_CENTER = '{1}'", v.Local.sPriceSched, v.Local.sWC, v.Local.sSQL)
				f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL, v.Local.fRate)
			f.Intrinsic.Control.EndIf
			f.Data.Datatable.SetValue("displayDT", v.Local.iCnt, "R_Rate", v.Local.fRate)
		f.Intrinsic.Control.Next(v.Local.iCnt)		
		f.Data.Datatable.AcceptChanges("displayDT")
	f.ODBC.Connection!con.Close

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.loadSO.End

Program.Sub.cmdPriceSchd_Click.Start
v.Local.sSQL.Declare
v.Local.sRet.Declare
v.Local.iCnt.Declare
v.Local.sWC.Declare
v.Local.sType.Declare
v.Local.fRate.Declare
f.Intrinsic.Control.Try
'Try something
	f.ODBC.Connection!con.OpenCompanyConnection
		f.Intrinsic.UI.Browser("Price Schedules", "con", "Select ID, Descr from V_PRICE_SCHED", "ID*!*DESCRIPTION", "40*!*120", v.Local.sRet)
		f.Intrinsic.Control.If(v.Local.sRet.Trim, <>, "***CANCEL***")
			f.Intrinsic.String.Split(v.Local.sRet, "*!*", v.Local.sRet)
			f.Intrinsic.Control.For(v.Local.iCnt, 0, v.DataTable.displayDT.RowCount--, 1)
				v.Local.sWC.Set(v.DataTable.displayDT(v.Local.iCnt).Part!FieldValTrim)
				v.Local.sType.Set(v.DataTable.displayDT(v.Local.iCnt).Time_Type!FieldValTrim)
				f.Intrinsic.Control.If(v.Local.sType.Trim, =, "R")
					f.Intrinsic.String.Build("Select top 1 HR_DIRECT from PRICE_SCHED_PRC where PS_PRICE_SCHED = '{0}' and PS_WORK_CENTER = '{1}'", v.Local.sRet(0), v.Local.sWC, v.Local.sSQL)
					f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL, v.Local.fRate)
				f.Intrinsic.Control.Else
					f.Intrinsic.String.Build("Select top 1 HR_OVERTIME from PRICE_SCHED_PRC where PS_PRICE_SCHED = '{0}' and PS_WORK_CENTER = '{1}'", v.Local.sRet(0), v.Local.sWC, v.Local.sSQL)
					f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL, v.Local.fRate)
				f.Intrinsic.Control.EndIf
				f.Data.Datatable.SetValue("displayDT", v.Local.iCnt, "R_Rate", v.Local.fRate)
			f.Intrinsic.Control.Next(v.Local.iCnt)
			
		f.Intrinsic.Control.EndIf
	f.ODBC.Connection!con.Close
	f.Data.Datatable.AcceptChanges("displayDT")
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.cmdPriceSchd_Click.End

Program.Sub.Comments.Start
${$5$}$3.0.0.0$}$1
${$6$}$aanazco$}$20211209121653830$}$7aQAV3Tor/tR9bkuakHbuzQlHVuXCGOzWmgyCV8UX8jKlVvLMLUujgJ0Xh4IR5ogA04SF8NHK+M=
Program.Sub.Comments.End